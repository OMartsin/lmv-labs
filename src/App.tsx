import { useState } from 'react';

const App = () => {
    const [rooms, setRooms] = useState([
        { id: 1, name: '–ö—ñ–º–Ω–∞—Ç–∞ 1', status: 0 },
        { id: 2, name: '–ö—ñ–º–Ω–∞—Ç–∞ 2', status: 0 },
        { id: 3, name: '–ö—ñ–º–Ω–∞—Ç–∞ 3', status: 0 },
        { id: 4, name: '–ö—ñ–º–Ω–∞—Ç–∞ 4', status: 0 },
        { id: 5, name: '–ö—ñ–º–Ω–∞—Ç–∞ 5', status: 0 },
    ]);

    const [selectedRoom, setSelectedRoom] = useState({
        id: 0,
        name: '',
        status: 0
    });
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [currentPage, setCurrentPage] = useState('home');

    const hasAlarm = rooms.some(room => room.status === 2);

    const updateRoomStatus = (status: number) => {
        if (selectedRoom) {
            const updatedRooms = rooms.map(room =>
                room.id === selectedRoom.id ? { ...room, status } : room
            );
            setRooms(updatedRooms);
            setIsModalOpen(false);
        }
    };

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É —Å—Ç–∞—Ç—É—Å—É
    const getStatusColor = (status: number) => {
        switch(status) {
            case 0: return 'bg-green-500';
            case 1: return 'bg-yellow-500';
            case 2: return 'bg-red-500';
            default: return 'bg-gray-500';
        }
    };

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ —Å—Ç–∞—Ç—É—Å—É
    const getStatusName = (status: number) => {
        switch(status) {
            case 0: return '–í—Å–µ –¥–æ–±—Ä–µ';
            case 1: return '–ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É';
            case 2: return '–¢—Ä–∏–≤–æ–≥–∞';
            default: return '–ù–µ–≤—ñ–¥–æ–º–æ';
        }
    };

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    const HomePage = () => (
        <div className="p-6">
            <h1 className="text-2xl font-bold mb-6">–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è –ø—Ä–∏–º—ñ—â–µ–Ω—å</h1>

            {hasAlarm && (
                <div className="mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
                    <p className="font-bold">‚ö†Ô∏è –£–í–ê–ì–ê! –í –æ–¥–Ω–æ–º—É –∞–±–æ –∫—ñ–ª—å–∫–æ—Ö –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è—Ö –≤–∏—è–≤–ª–µ–Ω–æ —Ç—Ä–∏–≤–æ–∂–Ω–∏–π —Å—Ç–∞–Ω!</p>
                </div>
            )}

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {rooms.map(room => (
                    <div
                        key={room.id}
                        className="border rounded p-4 cursor-pointer hover:bg-gray-50"
                        onClick={() => {
                            setSelectedRoom(room);
                            setIsModalOpen(true);
                        }}
                    >
                        <div className="flex items-center justify-between">
                            <h2 className="text-lg font-medium">{room.name}</h2>
                            <div className={`${getStatusColor(room.status)} w-4 h-4 rounded-full`}></div>
                        </div>
                        <p className="mt-2">{getStatusName(room.status)}</p>
                    </div>
                ))}
            </div>
        </div>
    );

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    const InfoPage = () => (
        <div className="p-6">
            <h1 className="text-2xl font-bold mb-6">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–∏—Å—Ç–µ–º—É</h1>
            <div className="bg-gray-50 p-4 rounded border">
                <h2 className="text-lg font-medium mb-2">–ü—Ä–æ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É</h2>
                <p className="mb-4">
                    –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è –ø—Ä–∏–º—ñ—â–µ–Ω—å –¥–æ–∑–≤–æ–ª—è—î –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å—Ç–∞–Ω —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–∏–º—ñ—â–µ–Ω—å
                    —Ç–∞ —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏.
                </p>
                <h3 className="font-medium mb-2">–¢–∏–ø–∏ —Å—Ç–∞–Ω—ñ–≤:</h3>
                <ul className="list-disc pl-5 mb-4">
                    <li className="mb-1">
                        <span className="inline-block w-3 h-3 bg-green-500 rounded-full mr-2"></span>
                        <strong>–í—Å–µ –¥–æ–±—Ä–µ</strong> - –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Å—Ç–∞–Ω—ñ
                    </li>
                    <li className="mb-1">
                        <span className="inline-block w-3 h-3 bg-yellow-500 rounded-full mr-2"></span>
                        <strong>–ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É</strong> - –≤–∏—è–≤–ª–µ–Ω–æ –Ω–µ–∑–Ω–∞—á–Ω—ñ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è
                    </li>
                    <li className="mb-1">
                        <span className="inline-block w-3 h-3 bg-red-500 rounded-full mr-2"></span>
                        <strong>–¢—Ä–∏–≤–æ–≥–∞</strong> - –≤–∏—è–≤–ª–µ–Ω–æ –∫—Ä–∏—Ç–∏—á–Ω—É —Å–∏—Ç—É–∞—Ü—ñ—é, –ø–æ—Ç—Ä—ñ–±–Ω–µ –Ω–µ–≥–∞–π–Ω–µ –≤—Ç—Ä—É—á–∞–Ω–Ω—è
                    </li>
                </ul>
            </div>
        </div>
    );

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
    const ContactPage = () => (
        <div className="p-6">
            <h1 className="text-2xl font-bold mb-6">–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–ª—è –µ–∫—Å—Ç—Ä–µ–Ω–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ–π</h1>
            <div className="bg-gray-50 p-4 rounded border">
                <div className="mb-4">
                    <h2 className="text-lg font-medium">–ê–≤–∞—Ä—ñ–π–Ω–∞ —Å–ª—É–∂–±–∞</h2>
                    <p className="text-lg">üìû 0-800-123-456</p>
                </div>
                <div className="mb-4">
                    <h2 className="text-lg font-medium">–¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞</h2>
                    <p className="text-lg">üìû 0-800-999-000</p>
                </div>
                <div>
                    <h2 className="text-lg font-medium">–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞</h2>
                    <p className="text-lg">‚úâÔ∏è support@floodmonitor.com</p>
                </div>
            </div>
        </div>
    );

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    const StatusModal = () => {
        if (!selectedRoom) return null;

        return (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
                <div className="bg-white rounded-lg p-6 max-w-md w-full">
                    <h2 className="text-xl font-bold mb-4">{selectedRoom.name} - –°—Ç–∞—Ç—É—Å</h2>

                    <div className="mb-6">
                        <p className="mb-2 font-medium">–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å:</p>
                        <div className="flex items-center">
                            <div className={`${getStatusColor(selectedRoom.status)} w-4 h-4 rounded-full mr-2`}></div>
                            <span>{getStatusName(selectedRoom.status)}</span>
                        </div>
                    </div>

                    <div className="mb-6">
                        <p className="mb-2 font-medium">–ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å:</p>
                        <div className="grid grid-cols-1 gap-2">
                            <button
                                className="p-2 bg-green-100 hover:bg-green-200 rounded flex items-center"
                                onClick={() => updateRoomStatus(0)}
                            >
                                <div className="bg-green-500 w-4 h-4 rounded-full mr-2"></div>
                                –í—Å–µ –¥–æ–±—Ä–µ
                            </button>

                            <button
                                className="p-2 bg-yellow-100 hover:bg-yellow-200 rounded flex items-center"
                                onClick={() => updateRoomStatus(1)}
                            >
                                <div className="bg-yellow-500 w-4 h-4 rounded-full mr-2"></div>
                                –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É
                            </button>

                            <button
                                className="p-2 bg-red-100 hover:bg-red-200 rounded flex items-center"
                                onClick={() => updateRoomStatus(2)}
                            >
                                <div className="bg-red-500 w-4 h-4 rounded-full mr-2"></div>
                                –¢—Ä–∏–≤–æ–≥–∞
                            </button>
                        </div>
                    </div>

                    <div className="flex justify-end">
                        <button
                            className="px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded"
                            onClick={() => setIsModalOpen(false)}
                        >
                            –ó–∞–∫—Ä–∏—Ç–∏
                        </button>
                    </div>
                </div>
            </div>
        );
    };

    return (
        <div className="min-h-screen bg-gray-100">
            {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ—è */}
            <nav className="bg-white shadow">
                <div className="max-w-7xl mx-auto px-4">
                    <div className="flex justify-between h-16">
                        <div className="flex space-x-4 items-center">
                            <div className="font-bold text-lg">–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É</div>
                        </div>
                        <div className="flex items-center space-x-2">
                            <button
                                className={`px-3 py-2 rounded ${currentPage === 'home' ? 'bg-blue-100 text-blue-800' : 'hover:bg-gray-100'}`}
                                onClick={() => setCurrentPage('home')}
                            >
                                –ì–æ–ª–æ–≤–Ω–∞
                            </button>
                            <button
                                className={`px-3 py-2 rounded ${currentPage === 'info' ? 'bg-blue-100 text-blue-800' : 'hover:bg-gray-100'}`}
                                onClick={() => setCurrentPage('info')}
                            >
                                –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                            </button>
                            <button
                                className={`px-3 py-2 rounded ${currentPage === 'contact' ? 'bg-blue-100 text-blue-800' : 'hover:bg-gray-100'}`}
                                onClick={() => setCurrentPage('contact')}
                            >
                                –ö–æ–Ω—Ç–∞–∫—Ç–∏
                            </button>
                        </div>
                    </div>
                </div>
            </nav>

            {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
            <main className="max-w-7xl mx-auto bg-white shadow rounded-lg my-6">
                {currentPage === 'home' && <HomePage />}
                {currentPage === 'info' && <InfoPage />}
                {currentPage === 'contact' && <ContactPage />}
            </main>

            {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
            {isModalOpen && <StatusModal />}
        </div>
    );
};

export default App;